// <auto-generated />
using System;
using FirstEFCoreConsoleApp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FirstEFCoreConsoleApp.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20230505131823_AddProlophicKey")]
    partial class AddProlophicKey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("FirstEFCoreConsoleApp.Model.AuditEntry", b =>
                {
                    b.Property<int>("AuditEntryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AuditEntryId");

                    b.HasIndex("CountryId");

                    b.ToTable("AuditEntries");
                });

            modelBuilder.Entity("FirstEFCoreConsoleApp.Model.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("FirstEFCoreConsoleApp.Model.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sinopsis")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("FirstEFCoreConsoleApp.Model.BookFile", b =>
                {
                    b.Property<int>("BookFileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InternalFilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("BookFileId");

                    b.HasIndex("BookId");

                    b.ToTable("BookFiles");
                });

            modelBuilder.Entity("FirstEFCoreConsoleApp.Model.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("FirstEFCoreConsoleApp.Model.PhisicalLibrary", b =>
                {
                    b.Property<int>("PhisicalLibraryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PhisicalLibraryId");

                    b.ToTable("PhisicalLibraries", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("FirstEFCoreConsoleApp.Model.ProliphicAuthor", b =>
                {
                    b.Property<int>("ProliphicAuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProliphicAuthorId");

                    b.ToTable("ProliphicAuthors");
                });

            modelBuilder.Entity("FirstEFCoreConsoleApp.Model.RatedBook", b =>
                {
                    b.Property<int>("BookId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Starts")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable((string)null);

                    b.ToView("MostHighlyRatedBooks", "dbo");
                });

            modelBuilder.Entity("FirstEFCoreConsoleApp.Model.AuditEntry", b =>
                {
                    b.HasOne("FirstEFCoreConsoleApp.Model.Country", "Country")
                        .WithMany("AuditEntries")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("FirstEFCoreConsoleApp.Model.Book", b =>
                {
                    b.HasOne("FirstEFCoreConsoleApp.Model.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("FirstEFCoreConsoleApp.Model.BookFile", b =>
                {
                    b.HasOne("FirstEFCoreConsoleApp.Model.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");
                });

            modelBuilder.Entity("FirstEFCoreConsoleApp.Model.Author", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("FirstEFCoreConsoleApp.Model.Country", b =>
                {
                    b.Navigation("AuditEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
